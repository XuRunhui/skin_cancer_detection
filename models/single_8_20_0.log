/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py:577: DtypeWarning: Columns (51,52) have mixed types. Specify dtype option on import or set low_memory=False.
  csv_file = pd.read_csv("../data/train-metadata.csv")
/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py:307: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  series.loc[missing_indices] = filled_values
/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py:307: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  series.loc[missing_indices] = filled_values
/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py:307: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  series.loc[missing_indices] = filled_values
/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py:307: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  series.loc[missing_indices] = filled_values
/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py:357: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '['Benign' 'Benign'
 'Benign::Benign melanocytic proliferations::Nevus::Blue nevus::Blue nevus, Cellular'
 ... 'Benign::Benign epidermal proliferations::Solar lentigo' 'Benign'
 'Benign']' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.
  self.annotations.loc[mask, col] = np.random.choice(
/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py:357: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '['Benign' 'Benign' 'Benign' ... 'Benign' 'Benign' 'Indeterminate']' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.
  self.annotations.loc[mask, col] = np.random.choice(
/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py:357: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '['Benign' 'Benign epidermal proliferations'
 'Benign epidermal proliferations' ...
 'Benign adnexal epithelial proliferations - Follicular' 'Benign'
 'Benign melanocytic proliferations']' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.
  self.annotations.loc[mask, col] = np.random.choice(
/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py:357: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '['Atypical melanocytic neoplasm' 'Benign' 'Basal cell carcinoma' ...
 'Atypical melanocytic neoplasm' 'Atypical melanocytic neoplasm'
 'Angiofibroma']' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.
  self.annotations.loc[mask, col] = np.random.choice(
/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py:357: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '['Angiofibroma, Facial' 'Angiofibroma, Facial'
 'Benign adnexal epithelial proliferations - Follicular' ...
 'Angiofibroma, Facial' 'Hemangioma, Cherry' 'Angiofibroma, Facial']' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.
  self.annotations.loc[mask, col] = np.random.choice(
/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py:357: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '['Angiofibroma, Facial' 'Angiofibroma, Facial' 'Basal cell carcinoma' ...
 'Angiofibroma, Facial'
 'Atypical intraepithelial melanocytic proliferation'
 'Angiofibroma, Facial']' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.
  self.annotations.loc[mask, col] = np.random.choice(
/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py:357: FutureWarning: Setting an item of incompatible dtype is deprecated and will raise an error in a future version of pandas. Value '['0/mm^2' '0/mm^2' nan ... '0/mm^2' '0/mm^2' '1/mm^2']' has dtype incompatible with int64, please explicitly cast to a compatible dtype first.
  self.annotations.loc[mask, col] = np.random.choice(
train data init begin
train data init done
val data init begin
getting full dataframe
encoding labels
Label encoder for sex has 2 classes
Label encoder for anatom_site_general has 5 classes
Label encoder for image_type has 1 classes
Label encoder for tbp_tile_type has 2 classes
Label encoder for tbp_lv_location has 21 classes
Label encoder for tbp_lv_location_simple has 8 classes
Label encoder for attribution has 7 classes
Label encoder for copyright_license has 3 classes
Label encoder for lesion_id has 2 classes
Label encoder for iddx_full has 50 classes
Label encoder for iddx_1 has 3 classes
Label encoder for iddx_2 has 14 classes
Label encoder for iddx_3 has 27 classes
Label encoder for iddx_4 has 50 classes
Label encoder for iddx_5 has 50 classes
Label encoder for mel_mitotic_index has 8 classes
normalizing numerical data
val data init done
Loaded pretrained weights for efficientnet-b0
Loading model from best_model.pt
[GPU1] Epoch 1/10
Epoch 1/10:   0%|          | 0/5009 [00:00<?, ?it/s]Epoch 1/10:   0%|          | 1/5009 [02:34<215:11:22, 154.69s/it]Epoch 1/10:   0%|          | 2/5009 [02:35<89:15:49, 64.18s/it]  Epoch 1/10:   0%|          | 3/5009 [02:36<49:01:25, 35.25s/it]Epoch 1/10:   0%|          | 4/5009 [02:37<30:06:23, 21.66s/it]Epoch 1/10:   0%|          | 5/5009 [02:37<19:39:17, 14.14s/it]Epoch 1/10:   0%|          | 6/5009 [02:38<13:22:02,  9.62s/it]Epoch 1/10:   0%|          | 7/5009 [02:39<9:21:35,  6.74s/it] Epoch 1/10:   0%|          | 8/5009 [02:40<6:44:43,  4.86s/it]Epoch 1/10:   0%|          | 9/5009 [02:41<4:59:31,  3.59s/it]Epoch 1/10:   0%|          | 10/5009 [02:42<3:47:41,  2.73s/it]Epoch 1/10:   0%|          | 11/5009 [02:42<2:58:37,  2.14s/it]Epoch 1/10:   0%|          | 12/5009 [02:43<2:25:31,  1.75s/it]Epoch 1/10:   0%|          | 13/5009 [02:44<2:01:52,  1.46s/it]Epoch 1/10:   0%|          | 14/5009 [02:45<1:45:33,  1.27s/it]Epoch 1/10:   0%|          | 15/5009 [02:46<1:34:18,  1.13s/it]Epoch 1/10:   0%|          | 16/5009 [02:46<1:26:14,  1.04s/it]Epoch 1/10:   0%|          | 17/5009 [04:51<52:46:45, 38.06s/it]Epoch 1/10:   0%|          | 18/5009 [04:51<37:13:08, 26.85s/it]Epoch 1/10:   0%|          | 19/5009 [04:52<26:20:44, 19.01s/it]Epoch 1/10:   0%|          | 20/5009 [04:55<19:46:27, 14.27s/it]Epoch 1/10:   0%|          | 21/5009 [04:56<14:08:25, 10.21s/it]Epoch 1/10:   0%|          | 22/5009 [04:57<10:11:14,  7.35s/it]Epoch 1/10:   0%|          | 23/5009 [04:58<7:27:46,  5.39s/it] Epoch 1/10:   0%|          | 24/5009 [04:58<5:30:57,  3.98s/it]Epoch 1/10:   0%|          | 25/5009 [04:59<4:12:35,  3.04s/it]Epoch 1/10:   1%|          | 26/5009 [05:05<5:23:11,  3.89s/it]Epoch 1/10:   1%|          | 27/5009 [05:06<4:06:18,  2.97s/it]Epoch 1/10:   1%|          | 28/5009 [05:07<3:12:39,  2.32s/it]Epoch 1/10:   1%|          | 29/5009 [05:07<2:35:41,  1.88s/it]Epoch 1/10:   1%|          | 30/5009 [05:08<2:09:46,  1.56s/it]Epoch 1/10:   1%|          | 31/5009 [05:09<1:51:30,  1.34s/it]Epoch 1/10:   1%|          | 32/5009 [05:10<1:39:05,  1.19s/it]Epoch 1/10:   1%|          | 33/5009 [07:28<58:25:43, 42.27s/it]Epoch 1/10:   1%|          | 34/5009 [07:29<41:13:13, 29.83s/it]Epoch 1/10:   1%|          | 35/5009 [07:30<29:10:43, 21.12s/it]Epoch 1/10:   1%|          | 36/5009 [07:31<21:04:29, 15.26s/it]Epoch 1/10:   1%|          | 37/5009 [07:32<15:04:35, 10.92s/it]Epoch 1/10:   1%|          | 38/5009 [07:33<10:52:59,  7.88s/it]Epoch 1/10:   1%|          | 39/5009 [07:34<7:55:55,  5.75s/it] Epoch 1/10:   1%|          | 40/5009 [07:34<5:52:27,  4.26s/it]Epoch 1/10:   1%|          | 41/5009 [07:35<4:25:38,  3.21s/it]Epoch 1/10:   1%|          | 42/5009 [07:40<5:10:22,  3.75s/it]Epoch 1/10:   1%|          | 43/5009 [07:41<3:56:11,  2.85s/it]Epoch 1/10:   1%|          | 44/5009 [07:42<3:05:57,  2.25s/it]Epoch 1/10:   1%|          | 45/5009 [07:43<2:30:03,  1.81s/it]Epoch 1/10:   1%|          | 46/5009 [07:43<2:05:59,  1.52s/it]Epoch 1/10:   1%|          | 47/5009 [07:44<1:49:07,  1.32s/it]Epoch 1/10:   1%|          | 48/5009 [07:45<1:36:42,  1.17s/it]Epoch 1/10:   1%|          | 49/5009 [09:59<56:37:29, 41.10s/it]Epoch 1/10:   1%|          | 50/5009 [10:00<39:58:16, 29.02s/it]Epoch 1/10:   1%|          | 51/5009 [10:01<28:19:28, 20.57s/it]Epoch 1/10:   1%|          | 52/5009 [10:04<21:05:01, 15.31s/it]Epoch 1/10:   1%|          | 53/5009 [10:05<15:05:55, 10.97s/it]Epoch 1/10:   1%|          | 54/5009 [10:06<10:54:31,  7.93s/it]Epoch 1/10:   1%|          | 55/5009 [10:07<7:57:53,  5.79s/it] Epoch 1/10:   1%|          | 56/5009 [10:07<5:55:03,  4.30s/it]Epoch 1/10:   1%|          | 57/5009 [10:08<4:28:38,  3.26s/it]Epoch 1/10:   1%|          | 58/5009 [10:24<9:36:31,  6.99s/it]Epoch 1/10:   1%|          | 59/5009 [10:25<7:03:42,  5.14s/it]Epoch 1/10:   1%|          | 60/5009 [10:26<5:16:30,  3.84s/it]Epoch 1/10:   1%|          | 61/5009 [10:26<4:01:35,  2.93s/it]Epoch 1/10:   1%|          | 62/5009 [10:27<3:09:52,  2.30s/it]Epoch 1/10:   1%|▏         | 63/5009 [10:28<2:33:26,  1.86s/it]Epoch 1/10:   1%|▏         | 64/5009 [10:29<2:08:22,  1.56s/it]Epoch 1/10:   1%|▏         | 65/5009 [12:29<50:51:21, 37.03s/it]Epoch 1/10:   1%|▏         | 66/5009 [12:29<35:55:41, 26.17s/it]Epoch 1/10:   1%|▏         | 67/5009 [12:38<28:30:17, 20.76s/it]Epoch 1/10:   1%|▏         | 68/5009 [12:41<21:23:21, 15.58s/it]Epoch 1/10:   1%|▏         | 69/5009 [12:42<15:18:27, 11.16s/it]Epoch 1/10:   1%|▏         | 70/5009 [12:43<11:02:43,  8.05s/it]Epoch 1/10:   1%|▏         | 71/5009 [12:44<8:04:09,  5.88s/it] Epoch 1/10:   1%|▏         | 72/5009 [12:44<5:58:47,  4.36s/it]Epoch 1/10:   1%|▏         | 73/5009 [12:45<4:31:14,  3.30s/it]Epoch 1/10:   1%|▏         | 74/5009 [13:07<12:01:28,  8.77s/it]Epoch 1/10:   1%|▏         | 75/5009 [13:07<8:34:12,  6.25s/it] Epoch 1/10:   2%|▏         | 76/5009 [13:07<6:09:08,  4.49s/it]Epoch 1/10:   2%|▏         | 77/5009 [13:08<4:27:36,  3.26s/it]Epoch 1/10:   2%|▏         | 78/5009 [13:08<3:16:32,  2.39s/it]Epoch 1/10:   2%|▏         | 79/5009 [13:09<2:26:47,  1.79s/it]Epoch 1/10:   2%|▏         | 80/5009 [13:09<1:52:00,  1.36s/it]Epoch 1/10:   2%|▏         | 80/5009 [13:23<13:45:23, 10.05s/it]
Traceback (most recent call last):
  File "/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py", line 673, in <module>
    main(device, args.total_epochs, args.save_every, args.batch_size)
  File "/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py", line 651, in main
    trainer.train(total_epochs)
  File "/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py", line 545, in train
    self._run_epoch(epoch)
  File "/home/runhui/2024_Skin_Cancer_Detection/models/efficientnet_single.py", line 438, in _run_epoch
    for images, categorical_data, numerical_data, labels in tqdm(self.train_data, desc=f"Epoch {epoch+1}/{self.total_epochs}"):
  File "/home/runhui/miniconda3/envs/skin/lib/python3.12/site-packages/tqdm/std.py", line 1181, in __iter__
    for obj in iterable:
  File "/home/runhui/miniconda3/envs/skin/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 631, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/home/runhui/miniconda3/envs/skin/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1329, in _next_data
    idx, data = self._get_data()
                ^^^^^^^^^^^^^^^^
  File "/home/runhui/miniconda3/envs/skin/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1285, in _get_data
    success, data = self._try_get_data()
                    ^^^^^^^^^^^^^^^^^^^^
  File "/home/runhui/miniconda3/envs/skin/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1133, in _try_get_data
    data = self._data_queue.get(timeout=timeout)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runhui/miniconda3/envs/skin/lib/python3.12/queue.py", line 180, in get
    self.not_empty.wait(remaining)
  File "/home/runhui/miniconda3/envs/skin/lib/python3.12/threading.py", line 359, in wait
    gotit = waiter.acquire(True, timeout)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
